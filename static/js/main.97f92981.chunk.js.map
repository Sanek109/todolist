{"version":3,"sources":["components/TodoListTasks/TodoListTask/TodoListTask.jsx","components/TodoListTasks/TodoListTasks.jsx","store/reducerFooter.js","components/TodoListFooter/TodoListFooter.jsx","components/TodoListHeader/TodoListTitle.jsx","components/TodoListHeader/AddNewItemForm.jsx","store/reducerTodolist.js","components/TodoList.js","App.js","store/store.js","index.js","components/TodoListFooter/TodoList.module.css","components/TodoListTasks/TodoListTask/TodoListTask.module.css"],"names":["TodoListTask","props","useState","editMode","setEditMode","classForCheckbox","task","isDone","className","type","checked","onChange","e","changeStatus","id","currentTarget","onBlur","autoFocus","value","title","changeTitle","onDoubleClick","style","spanTask","buttonDelete","onClick","deleteTask","TodoListTasks","taskElements","tasks","map","key","initialState","isHidden","reducerFooter","state","action","connect","onShowFiltersClick","onHideFiltersClick","classForAll","filterValue","classForCompleted","classForActive","todoListFooter","buttonFooter","changeFilter","spanMenu","TodoListTitle","AddNewItemForm","isError","setIsError","setIsTitle","onAddItemClick","newText","addItem","classForError","placeholder","onKeyPress","reducerTodolist","newTask","t","taskId","obj","filter","connectedTodoList","addTask","changeTask","setFilterValue","newTaskId","setNewTaskId","newFilterValue","connectedApp","reducers","combineReducers","store","createStore","window","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.97f92981.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport style from './TodoListTask.module.css';\r\n\r\nconst TodoListTask = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n    }\r\n\r\n    const onIsDoneChanged = (e) => {\r\n        debugger\r\n        props.changeStatus(props.task.id, e.currentTarget.checked);\r\n    }\r\n\r\n    const onTitleChanged = (e) => {\r\n        props.changeTitle(props.task.title, e.currentTarget.value)\r\n    }\r\n\r\n    const deleteTaskTodolist = () => {\r\n        props.deleteTask(props.task.id)\r\n    }\r\n\r\n\r\n    let classForCheckbox = props.task.isDone === true ? \"todoList-task\" : \"todoList-task done\";\r\n    return (\r\n        <div>\r\n            <div className={classForCheckbox}>\r\n                <input type=\"checkbox\" checked={props.task.isDone} onChange={onIsDoneChanged}/>\r\n                {editMode\r\n                    ? <input onBlur={deactivateEditMode} autoFocus={true} value={props.task.title}\r\n                             onChange={onTitleChanged}/>\r\n                    : <span onDoubleClick={activateEditMode} className={style.spanTask}>{props.task.title}\r\n                        <button className={style.buttonDelete} onClick={deleteTaskTodolist}>x</button></span>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TodoListTask;\r\n","import React from 'react';\r\nimport TodoListTask from './TodoListTask/TodoListTask';\r\n\r\nconst TodoListTasks = (props) => {\r\n    let taskElements = props.tasks.map((task, key) => <TodoListTask\r\n        deleteTask={props.deleteTask}\r\n        key={key}\r\n        task={task}\r\n        changeStatus={props.changeStatus}\r\n        changeTitle={props.changeTitle}\r\n    />)\r\n    return (\r\n        <div className=\"todoList-task\">\r\n            {taskElements}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TodoListTasks;\r\n","const ON_SHOW_FILTERS_CLICK = 'ON_SHOW_FILTERS_CLICK';\r\nconst ON_HIDE_FILTERS_CLICK = 'ON_HIDE_FILTERS_CLICK';\r\n\r\nconst initialState = {\r\n    isHidden: false\r\n}\r\n\r\nconst reducerFooter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ON_SHOW_FILTERS_CLICK:\r\n            return {\r\n                ...state,\r\n                isHidden: true\r\n            }\r\n\r\n        case ON_HIDE_FILTERS_CLICK:\r\n            return {\r\n                ...state,\r\n                isHidden: false\r\n            }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport const onShowFiltersClick = () => {\r\n    return {\r\n        type: 'ON_SHOW_FILTERS_CLICK'\r\n    }\r\n}\r\n\r\nexport const onHideFiltersClick = () => {\r\n    return {\r\n        type: 'ON_HIDE_FILTERS_CLICK'\r\n    }\r\n}\r\n\r\n\r\nexport default reducerFooter;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {onShowFiltersClick, onHideFiltersClick} from \"./../../store/reducerFooter\"\r\nimport style from './TodoList.module.css';\r\n\r\nconst TodoListFooter = (props) => {\r\n    const onAllFilterClick = () => {\r\n        props.changeFilter('All')\r\n    }\r\n\r\n    const onCompletedFilterClick = () => {\r\n        props.changeFilter('Completed')\r\n    }\r\n\r\n    const onActiveFilterClick = () => {\r\n        props.changeFilter('Active')\r\n    }\r\n\r\n    let classForAll = props.filterValue === \"All\" ? \"filter-active\" : \"\";\r\n    let classForCompleted = props.filterValue === \"Completed\" ? \"filter-active\" : \"\";\r\n    let classForActive = props.filterValue === \"Active\" ? \"filter-active\" : \"\";\r\n\r\n    return (\r\n        <div className={style.todoListFooter}>\r\n            {!props.isHidden && <div className={style.buttonFooter}>\r\n                <button onClick={onAllFilterClick} className={classForAll}>All</button>\r\n                <button onClick={onCompletedFilterClick} className={classForCompleted}>Completed</button>\r\n                <button onClick={onActiveFilterClick} className={classForActive}>Active</button>\r\n            </div>}\r\n            {!props.isHidden && <span className={style.spanMenu} onClick={props.onShowFiltersClick}>Hide Menu</span>}\r\n            {props.isHidden && <span className={style.spanMenu} onClick={props.onHideFiltersClick}>Show Menu</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isHidden: state.reducerFooter.isHidden\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {onShowFiltersClick, onHideFiltersClick})(TodoListFooter)\r\n","import React from 'react';\r\n\r\nconst TodoListTitle = (props) => {\r\n    return (\r\n        <div className=\"todoList-header\">\r\n            <h3 className=\"todoList-header__title\">{props.title}</h3>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default TodoListTitle;\r\n","import React, {useState} from 'react';\r\n\r\nconst AddNewItemForm = (props) => {\r\n    let [isError, setIsError] = useState(true);\r\n    let [title, setIsTitle] = useState('');\r\n\r\n    const onAddItemClick = () => {\r\n        let newText = title;\r\n        if (newText === '') {\r\n            setIsError(true);\r\n        } else {\r\n            setIsError(false);\r\n        }\r\n        setIsError(true);\r\n\r\n        props.addItem(newText);\r\n        setIsTitle('');\r\n    }\r\n\r\n    const deleteError = (e) => {\r\n        setIsError(false)\r\n        setIsTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onAddItemKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            onAddItemClick();\r\n        }\r\n    }\r\n\r\n    let classForError = isError === true ? \"error\" : \"\";\r\n    return (\r\n        <div className=\"todoList-header\">\r\n            <div className=\"todoList-newTaskForm\">\r\n                <input onChange={deleteError}\r\n                       type=\"text\" placeholder=\"New item task\"\r\n                       className={classForError}\r\n                       onKeyPress={onAddItemKeyPress}\r\n                       value={title}/>\r\n                <div onClick={onAddItemClick} className='button-add-task'>Add Task!</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewItemForm;\r\n","const ADD_TASK = 'ADD_TASK';\r\nconst CHANGE_TASK = 'CHANGE_TASK';\r\nconst DELETE_TASK = 'DELETE_TASK';\r\n\r\nconst initialState = {\r\n    title: 'My tasks!',\r\n    tasks: [\r\n        {id: 0, title: \"GitHub\", isDone: false},\r\n        {id: 1, title: \"Redux\", isDone: false},\r\n        {id: 2, title: \"React\", isDone: true}\r\n    ]\r\n}\r\n\r\nconst reducerTodolist = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                tasks: [...state.tasks, action.newTask]\r\n            }\r\n        case CHANGE_TASK: {\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(t => {\r\n                    if (t.title !== action.taskId && t.id !== action.taskId) {\r\n                        return t;\r\n                    } else {\r\n                        return {...t, ...action.obj}\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        case DELETE_TASK: {\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.filter(t => {\r\n                    if (t.id !== action.taskId) {\r\n                        return t;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addTask = (newTask) => {\r\n    return {\r\n        type: \"ADD_TASK\",\r\n        newTask\r\n    }\r\n}\r\n\r\nexport const changeTask = (taskId, obj) => {\r\n    return {\r\n        type: CHANGE_TASK,\r\n        taskId,\r\n        obj\r\n    }\r\n}\r\n\r\nexport const deleteTask = (taskId) => {\r\n    return {\r\n        type: DELETE_TASK,\r\n        taskId\r\n    }\r\n}\r\n\r\nexport default reducerTodolist;\r\n","import React, {useState} from 'react';\r\nimport '../App.css';\r\nimport TodoListTasks from './TodoListTasks/TodoListTasks';\r\nimport TodoListFooter from './TodoListFooter/TodoListFooter';\r\nimport TodoListTitle from './TodoListHeader/TodoListTitle';\r\nimport AddNewItemForm from './TodoListHeader/AddNewItemForm';\r\nimport {addTask, changeTask, deleteTask} from \"../store/reducerTodolist\";\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst TodoList = (props) => {\r\n\r\n    let [filterValue, setFilterValue] = useState('All');\r\n    let [newTaskId, setNewTaskId] = useState(4)\r\n\r\n    const addItem = (newText) => {\r\n        let newTask = {\r\n            id: newTaskId,\r\n            title: newText,\r\n            isDone: false,\r\n        }\r\n        props.addTask(newTask);\r\n        setNewTaskId(newTaskId + 1)\r\n    }\r\n\r\n    const changeFilter = (newFilterValue) => {\r\n        setFilterValue(newFilterValue)\r\n    }\r\n\r\n    const changeStatus = (taskId, isDone) => {\r\n        props.changeTask(taskId, {isDone: isDone});\r\n    }\r\n\r\n    const changeTitle = (taskId, title) => {\r\n        props.changeTask(taskId, {title: title});\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"todoList\">\r\n                <div className=\"todoList-header\">\r\n                    <TodoListTitle title={props.title}/>\r\n                    <AddNewItemForm addItem={addItem}/>\r\n                </div>\r\n                <TodoListTasks changeStatus={changeStatus}\r\n                               changeTitle={changeTitle}\r\n                               deleteTask={props.deleteTask}\r\n                               tasks={props.tasks.filter(t => {\r\n                                   if (filterValue === 'All') {\r\n                                       return true;\r\n                                   } else if (filterValue === 'Active') {\r\n                                       return t.isDone === false;\r\n                                   } else if (filterValue === 'Completed') {\r\n                                       return t.isDone === true;\r\n                                   }\r\n                               })}/>\r\n                <TodoListFooter changeFilter={changeFilter} filterValue={filterValue}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst connectedTodoList = connect(null, {addTask, changeTask, deleteTask})(TodoList);\r\n\r\nexport default connectedTodoList;\r\n","import React from 'react';\nimport './index.css';\nimport TodoList from './components/TodoList';\nimport {connect} from 'react-redux';\n\nconst App = (props) => {\n    return (\n        <div>\n            <div className=\"App\">\n                <TodoList tasks={props.tasks} title={props.title}/>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tasks: state.reducerTodolist.tasks,\n        title: state.reducerTodolist.title,\n    }\n}\n\nconst connectedApp = connect(mapStateToProps, null)(App);\n\nexport default connectedApp;\n","import {combineReducers, createStore} from \"redux\";\r\nimport reducerTodolist from \"./reducerTodolist\";\r\nimport reducerFooter from \"./reducerFooter\"\r\n\r\nlet reducers = combineReducers({\r\n    reducerTodolist,\r\n    reducerFooter\r\n})\r\n\r\nconst store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/store'\n\nReactDOM.render(\n    <Provider store={store} >\n        <App />\n    </Provider>, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanMenu\":\"TodoList_spanMenu__gbeVX\",\"buttonFooter\":\"TodoList_buttonFooter__6JDus\",\"todoListFooter\":\"TodoList_todoListFooter__2Q2mK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDelete\":\"TodoListTask_buttonDelete__2pA-g\",\"spanTask\":\"TodoListTask_spanTask__x8AWo\"};"],"sourceRoot":""}